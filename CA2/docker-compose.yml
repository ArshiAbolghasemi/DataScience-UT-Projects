services:
  kafka:
    image: apache/kafka:latest
    hostname: kafka
    container_name: ut-ds-ca2-kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:9093'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:29092,CONTROLLER://kafka:9093,EXTERNAL://0.0.0.0:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:29092,EXTERNAL://localhost:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      CLUSTER_ID: ${KAFKA_CLUSTER_ID}
    volumes:
      - kafka_data:/opt/kafka/data
    networks:
      - darooghe-net
  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    container_name: ut-ds-ca2-kafdrop
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:29092
      JVM_OPTS: "-Xms32M -Xmx64M"
    depends_on:
      - kafka
    networks:
      - darooghe-net
  mongodb:
    image: mongo:latest
    container_name: ut-ds-ca2-mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongodb_data:/data/db
    networks:
      - darooghe-net
  prometheus:
    image: prom/prometheus:latest
    container_name: ut-ds-ca2-prometheus
    ports:
      - "9090:9090"
    depends_on:
      - kafka
      - mongodb
    networks:
      - darooghe-net
  grafana:
    image: grafana/grafana:latest
    container_name: ut-ds-ca2-grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: ${GF_SECURITY_ADMIN_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD}
    volumes:
      - ./grafana/dashboards:/etc/grafana/dashboards
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - darooghe-net
  spark-master:
    image: bitnami/spark:latest
    container_name: ut-ds-ca2-spark-master
    hostname: spark-master
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      SPARK_MODE: master
      SPARK_RPC_AUTHENTICATION_ENABLED: no
    volumes:
      - ./jars:/app/jars
    networks:
      - darooghe-net
  spark-worker-1:
    image: bitnami/spark:latest
    container_name: ut-ds-ca2-spark-worker-1
    hostname: spark-worker-1
    ports:
      - "8081:8081"
    environment:
      SPARK_MODE: worker
      SPARK_MASTER_URL: spark://spark-master:7077
      SPARK_WORKER_MEMORY: 2g
      SPARK_WORKER_CORES: 2
    depends_on:
      - spark-master
    volumes:
      - ./jars:/app/jars
    networks:
      - darooghe-net
  darooghe-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: darooghe-app
    hostname: darooghe-app
    volumes:
      - ./darooghe:/app/darooghe
      - ./main.py:/app/main.py
      - ./setup.py:/app/setup.py
      - ./jars:/app/jars
    depends_on:
      - kafka
      - mongodb
      - spark-master
    ports:
      - "4040:4040"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      MONGO_URI: ${MONGO_URI}
      MONGO_DB_TRANSACTION_DATA_TTL: 86400
      SPARK_MASTER: spark://spark-master:7077
      SPARK_LOCAL_IP: darooghe-app
      SPARK_DRIVER_HOST: darooghe-app
      SPARK_DRIVER_BIND_ADDRESS: 0.0.0.0
      SPARK_MONGO_JARS_PACKAGES: org.mongodb.spark:mongo-spark-connector_2.12:10.4.0
      SPARK_KAFKA_JARS_PACKAGES: org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.5
    command: tail -f /dev/null
    networks:
      - darooghe-net
volumes:
  kafka_data:
  mongodb_data:
  prometheus_data:
  grafana_data:

networks:
  darooghe-net:
    driver: bridge
    name: darooghe-network
